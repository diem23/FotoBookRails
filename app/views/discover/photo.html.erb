<div class="row h-100 discover photo">
                    <div class="col-0 col-lg-2 d-flex flex-row justify-content-center mt-4">
                        <ul class="d-none d-lg-inline-block nav-list" >
                            <a href="/">
                                <li class="d-block mb-2">Feeds</li>
                            </a>
                            <a href="#">
                                <li class="d-block mb-2">Discover</li>
                            </a>
                        </ul>
                    </div>
                    <div class="col-12 col-lg-8 center-container d-flex flex-column align-items-center"> 
                        
                        <div class="switch-mode d-flex mt-4">
                            <a href="#">
                                <div class="photo-btn p-2">PHOTO</div>
                            </a>
                            <a href="/discover/album">
                                <div class="album-btn p-2">ALBUM</div>
                            </a>
                        </div>
                        <div class="row w-100 h-90 " >
                            <% @list_photos.each_with_index do |ele,index|%>
                                <%=render 'shared/photo_card', ele: ele, index: index , have_follow: true, from_page: "discover"%>
                            <% end %>
                        </div>
                    </div>
            </div>
<script>
    console.log('Hello from follow button');  
    function followAPI(id){
            $.ajax({
            url: "/discover/follow",
            type: "PUT",
            data: {user_id: id},
            success: function(data) {},
            error: function(data) {}
        })
    }
    function likePhotoAPI(id){
        $.ajax({
            url: "/react_photos",
            type: "PUT",
            data: {photo_id: id},
            success: function(data) {},
            error: function(data) {}
        })
    }
    const debounceReact = function (func, timeout = 3000){
        return (...args) => {
            console.log(this.timer)
            clearTimeout(this.timer);
            this.timer = setTimeout(() => { func.apply(this, args); }, timeout);
        };
    }
    const debounceFollow= function (func, timeout = 3000){
        return (...args) => {
            console.log(this.timer)
            clearTimeout(this.timer);
            this.timer = setTimeout(() => { func.apply(this, args); }, timeout);
        };
    }                       
    let likeBtns = document.querySelectorAll('.like-btn')
    likeBtns.forEach((btn)=>{
        btn.addEventListener('click',function stopPropagation(event){
            event.stopPropagation();
            if (btn.querySelector('i').classList.contains("unheart")){
                
                btn.querySelector('i').classList.remove("unheart")
            }else{
                
                btn.querySelector('i').classList.add("unheart")
            }
            debounceReact(likePhotoAPI)(btn.querySelector('p').innerHTML)
        })
    })                                                 
    let followBtns =   document.querySelectorAll('.follow-btn')  
    followBtns.forEach((btn)=>{
        btn.addEventListener('click',function stopPropagation(event){

            event.stopPropagation();
            
            if (btn.querySelector('span').innerHTML == "Follow"){
                btn.querySelector('span').innerHTML = "Following"
                btn.classList.add("unfollow-btn")
            }else{
                btn.querySelector('span').innerHTML = "Follow"
                btn.classList.remove("unfollow-btn")
            }
            
            debounceFollow(followAPI)(btn.querySelector('p').innerHTML)
            
        })
    })                                               
    
    function showModal(modalId){
        var myModal = new bootstrap.Modal(document.getElementById(modalId), {
            keyboard: false
        })
        myModal.show()
    }
</script>